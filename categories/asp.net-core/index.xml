<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ASP.NET Core on Kodofish Blog</title><link>https://kodofish.dev/categories/asp.net-core/</link><description>Recent content in ASP.NET Core on Kodofish Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Thu, 08 Apr 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://kodofish.dev/categories/asp.net-core/index.xml" rel="self" type="application/rss+xml"/><item><title>如何設定 ASP.NET Core 網站應用程式持續執行在 IIS 上</title><link>https://kodofish.dev/post/2021-04-08_how_to_keep_and_running_web_application_on_iis/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0800</pubDate><guid>https://kodofish.dev/post/2021-04-08_how_to_keep_and_running_web_application_on_iis/</guid><description>在 IIS 預設的設定下，只有在收到第一個 Request 後才會啟動執行網站應用程式。啟動後若 20 分鐘都沒有收到任何新的 Request 時，就會將應用程式給中止。
若你要讓網站應用程式定時做一些背景工作，在 IIS 預設的設定下，你得在部署後發一個 Request 讓程式啟動，然後每 20 分鐘內再發一個 Request 讓 IIS 不會將程式給中止。
但這樣實在是太麻煩了，雖然有許多方式可以做到，但其實 IIS 本身是可以做到持續執行的，要做到這點有三個步驟。
安裝 Application Initialization Module 設定 Application Pool 設定 IIS Web site 安裝 Application Initialization Module 這是最重要的一步，有時候就是忘了安裝它造成網站應用程式無法持續執行。首先執行 Server Manager，再點選 Manager &amp;gt; Add Roles and Features 順著 Add Roles and Features Wizard 一直到 Server Roles 時, 在清單中找到 Web Server (IIS) &amp;gt; Web Server &amp;gt; Application Development &amp;gt; Application Initialization，把它選起來並安裝它。 設定 Application Pool 在 IIS 裡找到你的網站應用程式所使用的 Application Pool，按右鍵叫出選單，點選 Advanced Settings 調整以下的設定值</description></item></channel></rss>